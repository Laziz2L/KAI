package com.Abdullaev4211;

public class Main {
    public static void main(String[] args) {

        boolean A, B, C;                    //переменные, придавая значения которым будем проверять значения формулы
        String summands[] = new String[8];  //массив, который будет пополняться строками-дизъюнктами
        int count = 0;                      //счетчик добавленных в массив дизъюнктов

        //Далее перебираем по циклу целочисленные значения 0 и 1 для a, b, c, которые будем передавать
        //переменным A, B, C уже типа boolean (при этом используется функция IntToBool, определенная ниже)
        for (int a = 0; a<2; a++) {
            for (int b = 0; b<2; b++) {
                for (int c = 0; c<2; c++) {
                    A = IntToBool(a);
                    B = IntToBool(b);
                    C = IntToBool(c);
                    //По методу Квайна : если наша формула при данном наборе переменных ложна, добавляем в массив
                    //новый дизъюнкт. Записываем переменные с "не", если они в данном наборе истинны
                    if (!(A&C || A&B&!C)) {
                        summands[count] = (a==1?"(не А":"(А") +" или "+ (b==1?"не B":"B") +" или "+ (c==1?"не C)":"C)");
                        count++;            //увеличиваем число дизъюнктов
                    }
                }
            }
        }
        //Если счетчик равен нулю, дизъюнктов не найдено, выводим строку о том, что С.К.Н.Ф. нет
        //Если же не равен, то выводим все найденные дизъюнкты, между ними записывая "И"
        if (count == 0) {
            System.out.print("С.К.Н.Ф. нет");
        }
        else {
            System.out.print(summands[0]);
            for (int i = 1; i<count; i++ ) {
                System.out.print(" И " + summands[i]);
            }
        }

    }

    //функция получает в качестве аргумента целое число и возвращает значение типа boolean - true, если было получено 1,
    // и false во всех остальныъ случаях
    public static boolean IntToBool(int x) {

        if (x==1) {
            return true;
        } else {
            return false;
        }
    }
}
